machineQuality <- qualityPerMod * machineModSlots
# A common tier 3 quality module is 2.5% quality
qualityPerMod <- 2.5
# A recycler has 4 module slots
machineModSlots <- 4
# set machine quality
machineQuality <- qualityPerMod * machineModSlots
oneTierChange <- machineQuality/100
twoTierChange <- machineQuality/1000
threeTierChange <- machineQuality/10000
fourTierChange <- machineQuality/100000
noChange <- 1 - (oneTierChange +
twoTierChange +
threeTierChange +
fourTierChange)
quality.mat <- matrix(c(noChange, oneTierChange, twoTierChange, threeTierChange, fourTierChange,
0, noChange + fourTierChange, oneTierChange, twoTierChange, threeTierChange,
0, 0, noChange + fourTierChange + threeTierChange, oneTierChange, twoTierChange,
0, 0, 0, noChange + fourTierChange + threeTierChange + twoTierChange, oneTierChange,
0, 0, 0, 0, 1 / machineProductivity) * machineProductivity,
nrow = 5, ncol = 5, byrow = T)
# set the productivity of the machine + 1
# recyclers have -75% productivity
machineProductivity <- -0.25
# set the productivity of the machine + 1
# recyclers have -75% productivity
machineProductivity <- 0.25
quality.mat <- matrix(c(noChange, oneTierChange, twoTierChange, threeTierChange, fourTierChange,
0, noChange + fourTierChange, oneTierChange, twoTierChange, threeTierChange,
0, 0, noChange + fourTierChange + threeTierChange, oneTierChange, twoTierChange,
0, 0, 0, noChange + fourTierChange + threeTierChange + twoTierChange, oneTierChange,
0, 0, 0, 0, 1 / machineProductivity) * machineProductivity,
nrow = 5, ncol = 5, byrow = T)
quality.mat
matStart <- c(10000, 0,0,0,0)
quality.mat %*% matStart
matStart %*% quality.mat
mat_1 <- matStart %*% quality.mat
mat_1 %*% quality.mat
materials <- c(10000, 0,0,0,0)
while(materials[4] > 1){
materials <- materials %*% quality.mat
}
materials
while(sum(materials[1:4]) > 1){
materials <- materials %*% quality.mat
}
materials
materials <- c(100000, 0,0,0,0)
while(sum(materials[1:4]) > 1){
materials <- materials %*% quality.mat
}
materials
while(sum(materials[1:4]) > 0.0001){
materials <- materials %*% quality.mat
}
materials
materials <- c(100000, 0,0,0,0)
while(sum(materials[1:4]) > 0.0001){
materials <- materials %*% quality.mat
}
materials
View(mat_1)
View(quality.mat)
setwd("C:/Users/mclas/Documents/Harvard/projectWork/spreadsheets/plantSelection")
library(tidyverse)
rm(list = ls())
library(tidyverse)
allPlants <- read.csv("full_raw_plants.csv")
wantSpecies <- read.csv("cutDownList.csv")
View(allPlants)
View(wantSpecies)
allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude) %>%
right_join(wantSpecies, by = c(Family, Genus, Species))
allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude) %>%
right_join(wantSpecies, by = c("Family", "Genus", "Species"))
targetPlants_all <- allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude) %>%
right_join(wantSpecies, by = c("Family", "Genus", "Species"))
View(targetPlants_all)
targetPlants_all[is.na(targetPlants_all$Plant.ID) &
targetPlants_all$AA > 0, ]
targetPlants_all <- targetPlants_all[!(is.na(targetPlants_all$Plant.ID) &
targetPlants_all$AA > 0), ]
View(targetPlants_all)
targetPlants_all <- allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude) %>%
right_join(wantSpecies, by = c("Family", "Genus", "Species")) %>%
# it appears some plants have died. I will need to remove them from the list
filter(!(is.na(Plant.ID) & AA > 0))
targetPlants_all <- allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude) %>%
right_join(wantSpecies, by = c("Family", "Genus", "Species")) %>%
# it appears some plants have died. I will need to remove them from the list
filter(!(is.na(Plant.ID) & AA > 0)) %>%
filter(!(is.na(lat) & AA > 0))
View(targetPlants_all)
vibs <- targetPlants_all[targetPlants_all$Genus %in% "Viburnum", ]
View(vibs)
length(unique(vibs$Species))
length(unique(str_match(vibs$Garden.Location, "(24|25|18|19|13|14)")))
vibs$Garden.Location
str_match(vibs$Garden.Location, "(24|25|18|19|13|14)")
length(unique(str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")))
length(unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
))
unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
))
unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)"), ]
View(vibs515)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "")
View(vibs515)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(1)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(n = 1)
View(vibs515)
targetPlants_all <- allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude,
Condition) %>%
right_join(wantSpecies, by = c("Family", "Genus", "Species")) %>%
# it appears some plants have died. I will need to remove them from the list
filter(!(is.na(Plant.ID) & AA > 0)) %>%
filter(!(is.na(lat) & AA > 0))
vibs <- targetPlants_all[targetPlants_all$Genus %in% "Viburnum", ]
length(unique(vibs$Species)) # 39 species
length(unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
))
unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
)
View(vibs)
set.seed(515)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(n = 1)
View(vibs515)
ggplot(data = vibs, aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)"), ], aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(24|18|19|13|14)"), ], aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|18|19|13|14)"), ], aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|13|14)"), ], aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)"), ], aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
coord_fixed()
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)\\-"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(n = 1)
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515)
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, color = "red") +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, color = "red") +
geom_label(data = vibs515, aes(label = Species)) +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, color = "red") +
geom_label(data = vibs515, aes(label = Species), nudge_y = 0.05) +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, color = "red") +
geom_label(data = vibs515, aes(label = Species), nudge_y = 0.005) +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, color = "red") +
geom_label(data = vibs515, aes(label = Species), nudge_y = 0.0005) +
coord_fixed()
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, aes(color = Species)) +
# geom_label(data = vibs515, aes(label = Species), nudge_y = 0.0005) +
coord_fixed()
set.seed(515)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)\\-"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(n = 1)
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, aes(color = Species)) +
# geom_label(data = vibs515, aes(label = Species), nudge_y = 0.0005) +
coord_fixed()
set.seed(515)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)\\-"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(n = 1)
ggplot(data = vibs[str_detect(vibs$Garden.Location, "(25|24|18|19|13|14)\\-"), ], aes(x = lon, y = lat)) +
geom_point() +
geom_point(data = vibs515, aes(color = Species)) +
# geom_label(data = vibs515, aes(label = Species), nudge_y = 0.0005) +
coord_fixed()
write.csv("vibs515.csv", row.names = F)
write.csv(vibs515, "vibs515.csv", row.names = F)
write.table(vibs515$Plant.ID, "vibs515ID.txt")
write.table(vibs515$Plant.ID, "vibs515ID.txt", row.names = F)
targetPlants_all <- allPlants %>%
select(Plant.ID, Family, Genus, Species = Specific.epithet,
Cultivar, Sub = Infraspecific.Epithet, Garden.Location,
lat = Garden.Latitude, lon = Garden.Longitude,
Condition) %>%
right_join(wantSpecies, by = c("Family", "Genus", "Species")) %>%
# it appears some plants have died. I will need to remove them from the list
filter(!(is.na(Plant.ID) & AA > 0)) %>%
filter(!(is.na(lat) & AA > 0))
vibs <- targetPlants_all[targetPlants_all$Genus %in% "Viburnum", ]
length(unique(vibs$Species)) # 39 species
length(unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
))
unique(
vibs$Species[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)")]
)
set.seed(515)
vibs515 <- vibs[str_detect(vibs$Garden.Location, "(24|25|18|19|13|14)\\-"), ] %>%
# checked manually all cultivars can be removed
filter(Cultivar == "") %>%
# and now randomly get one of each
group_by(Species) %>%
slice_sample(n = 1)
View(vibs515)
View(vibs)
View(vibs)
write.csv(vibs, "vibs.csv", row.names = F)
